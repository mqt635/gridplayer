name: {APP_MODULE}
version: {APP_VERSION}
summary: Play multiple videos side-by-side
description: |
  Simple VLC-based media player that can play multiple videos at the same
  time. You can play as many videos as you like, the only limit is your
  hardware. It supports all video formats that VLC supports (which is all
  of them).
architectures:
  - amd64

base: core22
grade: stable
confinement: strict

license: GPL-3.0-or-later

parts:
  # python multiprocessing fix
  snapcraft-preload:
    source: https://github.com/sergiusens/snapcraft-preload.git
    source-commit: f1560b7a713f982546ea97629ff1557457faebb5
    plugin: cmake
    cmake-parameters:
      - -DCMAKE_INSTALL_PREFIX=/
    build-packages:
      - on amd64:
        - gcc-multilib
        - g++-multilib
    stage-packages:
      - lib32stdc++6

  vlc:
    plugin: nil
    stage-packages:
      - libvlc5
      - libvlccore9
      - vlc-plugin-base
      - vlc-plugin-video-output
      - libvlc-bin
    prime:
      - -usr/include
      - -usr/share/fonts
      - -usr/share/icons
      - -usr/share/doc
      - -usr/share/X11
      - -usr/share/mime
    override-build: |
      craftctl default

      LIB_DIR="${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}"
      VLC_LIB_DIR="${LIB_DIR}/vlc"

      ${CRAFT_PROJECT_DIR}/blacklist_clean.sh "$LIB_DIR" ${CRAFT_PROJECT_DIR}/blacklist_snap.txt
      rm -rf "${LIB_DIR}/dri"
      rm -rf "${LIB_DIR}/gdk-pixbuf-2.0"

      # Cleanup unused VLC modules
      ${CRAFT_PROJECT_DIR}/blacklist_clean.sh "$VLC_LIB_DIR" ${CRAFT_PROJECT_DIR}/blacklist_vlc_linux.txt

      #MAIN_SNAP="/snap/core22/current"
      #KDE_SNAP="/snap/kde-frameworks-5-102-qt-5-15-8-core22/current"

      #if [ ! -d "${KDE_SNAP}" ]; then echo "${KDE_SNAP} doesn't exist!"; exit 1; fi
      #if [ ! -d "${MAIN_SNAP}" ]; then echo "${MAIN_SNAP} doesn't exist!"; exit 1; fi

      # Emulate runtime env to make sure all plugin dependencies are reachable
      #LIBS="/var/lib/snapd/lib/gl:"
      #LIBS+="/var/lib/snapd/lib/gl32:"
      #LIBS+="/var/lib/snapd/void:"
      #LIBS+="${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}/pulseaudio:"
      #LIBS+="${VLC_LIB_DIR}:"
      #LIBS+="${CRAFT_PART_INSTALL}/lib:"
      #LIBS+="${CRAFT_PART_INSTALL}/usr/lib:"
      #LIBS+="${CRAFT_PART_INSTALL}/lib/${CRAFT_ARCH_TRIPLET}:"
      #LIBS+="${CRAFT_PART_INSTALL}/usr/lib/${CRAFT_ARCH_TRIPLET}:"
      #LIBS+="${KDE_SNAP}/lib/${CRAFT_ARCH_TRIPLET}:"
      #LIBS+="${KDE_SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET}:"
      #LIBS+="${KDE_SNAP}/usr/lib:"
      #LIBS+="${KDE_SNAP}/lib:"
      #LIBS+="${KDE_SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET}/dri:"
      #LIBS+="${KDE_SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET}/pulseaudio:"
      #LIBS+="${MAIN_SNAP}/lib/${CRAFT_ARCH_TRIPLET}:"
      #LIBS+="${MAIN_SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET}:"
      #LIBS+="${MAIN_SNAP}/usr/lib:"
      #LIBS+="${MAIN_SNAP}/lib:"

      # Generate VLC plugin cache
      #LD_LIBRARY_PATH="$LIBS" "${VLC_LIB_DIR}/vlc-cache-gen" "${VLC_LIB_DIR}/plugins"

  gridplayer:
    source: .
    plugin: python
    after: [snapcraft-preload, vlc]
    build-environment:
      - PIP_NO_BINARY: "pydantic"
    python-packages:
      - ${CRAFT_PROJECT_DIR}/{WHL_FILE}
    build-packages:
      - wget
    prime:
      - -usr/share/icons
      - -usr/include
      - -bin/pylupdate5
      - -bin/pyrcc5
      - -bin/pyuic5
      - -bin/pip*
      - -bin/easy*
      - -bin/activate*
      - -bin/Activate*
      - -bin/mid3cp
      - -bin/mid3iconv
      - -bin/mid3v2
      - -bin/moggsplit
      - -bin/mutagen-inspect
      - -bin/mutagen-pony
      - -bin/normalizer
      - -bin/streamlink
      - -bin/wsdump
      - -bin/yt-dlp
    override-build: |
      craftctl default

      # Prevent strange mimetypes.py glitch on Manjaro by creating dummy mime.types files
      install -D /dev/null "${CRAFT_PART_INSTALL}/etc/httpd/mime.types"
      install -D /dev/null "${CRAFT_PART_INSTALL}/etc/httpd/conf/mime.types"
      install -D /dev/null "${CRAFT_PART_INSTALL}/etc/apache/mime.types"
      install -D /dev/null "${CRAFT_PART_INSTALL}/etc/apache2/mime.types"
      install -D /dev/null "${CRAFT_PART_INSTALL}/usr/local/etc/httpd/conf/mime.types"
      install -D /dev/null "${CRAFT_PART_INSTALL}/usr/local/lib/netscape/mime.types"
      install -D /dev/null "${CRAFT_PART_INSTALL}/usr/local/etc/httpd/conf/mime.types"
      install -D /dev/null "${CRAFT_PART_INSTALL}/usr/local/etc/mime.types"

      # Replace static PyQt with dynamic to make it depend on libraries from kde-neon extension
      ${CRAFT_PROJECT_DIR}/apt_dl.sh python3-pyqt5 python3-pyqt5.qtx11extras python3-pyqt5.qtsvg python3-pyqt5.sip

      for file in *.deb; do dpkg-deb -x "$file" ./pyqt; done

      SITE_PATH="${CRAFT_PART_INSTALL}/lib/python3.10/site-packages"

      rm -rf "${SITE_PATH}"/PyQt*
      mv pyqt/usr/lib/python3/dist-packages/* "${SITE_PATH}"

      # Remove unneeded qt parts
      ${CRAFT_PROJECT_DIR}/blacklist_clean.sh "${SITE_PATH}" ${CRAFT_PROJECT_DIR}/blacklist_pyqt.txt

      # Install application meta
      install -Dm 644 ${CRAFT_PROJECT_DIR}/meta/{APP_ID}.desktop     ${CRAFT_PART_INSTALL}/usr/share/applications/{APP_ID}.desktop
      install -Dm 644 ${CRAFT_PROJECT_DIR}/meta/{APP_ID}.appdata.xml ${CRAFT_PART_INSTALL}/usr/share/metainfo/{APP_ID}.appdata.xml
      # Snaps don't support registration of new MIMEs yet?
      # https://forum.snapcraft.io/t/allow-snaps-to-register-new-mime-types/6467/9
      install -Dm 644 ${CRAFT_PROJECT_DIR}/meta/{APP_ID}.xml         ${CRAFT_PART_INSTALL}/usr/share/mime/packages/{APP_ID}.xml

      # Useless, since snap employs custom names for icons
      #(cd ${CRAFT_PROJECT_DIR}/meta/icons && find * -type f -exec install -Dm 644 "{}" "${CRAFT_PART_INSTALL}/usr/share/icons/{}" \;)

      # Copy icons to meta and rename icons as snap.* according to
      # https://forum.snapcraft.io/t/proposal-support-the-icon-theme-spec-for-desktop-icons/10676
      # https://github.com/snapcore/snapd/pull/6767
      sed -i 's|^Icon=.*|Icon=snap.{APP_MODULE}.{APP_ID}|' ${CRAFT_PART_INSTALL}/usr/share/applications/{APP_ID}.desktop
      (cd ${CRAFT_PROJECT_DIR}/meta/icons && find * -type f -exec install -Dm 644 "{}" "${CRAFT_PART_INSTALL}/meta/gui/icons/{}" \;)
      for f in $(find "${CRAFT_PART_INSTALL}/meta/gui/icons" -type f); do mv $f ${f%/*}/snap.{APP_MODULE}.${f##*/}; done

apps:
  gridplayer:
    extensions:
      - kde-neon
    environment:
      LD_LIBRARY_PATH: "$SNAP/usr/lib/x86_64-linux-gnu/pulseaudio:$SNAP/usr/lib/x86_64-linux-gnu/vlc"
      DISABLE_WAYLAND: 1
      NO_AT_BRIDGE: 1 # disable dbind-WARNING warning
    desktop: usr/share/applications/{APP_ID}.desktop
    command: bin/gridplayer
    command-chain:
      - bin/snapcraft-preload
    common-id: {APP_ID}
    plugs:
      - unity7
      - audio-playback
      - screen-inhibit-control
      - gsettings
      - home
      - removable-media
      - mount-observe
      - network
